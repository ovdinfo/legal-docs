{"version":3,"file":"substance-forms.js","sources":["../lib/rich-text-area/RichTextAreaEditor.js","../lib/rich-text-area/RichTextAreaHTMLImporter.js","../lib/rich-text-area/RichTextAreaHTMLExporter.js","../lib/rich-text-area/RichTextAreaPackage.js","../lib/xref/Xref.js","../lib/xref/XrefHTMLConverter.js","../lib/xref/XrefPackage.js","../lib/minimal-switch-text-type/MinimalSwitchTextTypeTool.js","../lib/minimal-switch-text-type/MinimalSwitchTextTypePackage.js","../lib/rich-text-area/RichTextArea.js","../lib/Forms.js","../lib/substance-forms.js"],"sourcesContent":["import { ProseEditorPackage, ContainerEditor } from 'substance'\nconst { ProseEditor } = ProseEditorPackage\n\n/**\n  Configurable ProseEditor component\n\n  @example\n\n  ```js\n  const cfg = new Configurator()\n  cfg.import(ProseEditorPackage)\n  cfg.import(SuperscriptPackage)\n\n  window.onload = function() {\n    let doc = configurator.createArticle(fixture)\n    let editorSession = new EditorSession(doc, {\n      configurator: configurator\n    })\n    RichTextAreaEditor.mount({\n      editorSession: editorSession\n    }, document.body)\n  }\n  ```\n*/\n\n// TODO: Check if we can inherit from AbstractEditor\nclass RichTextAreaEditor extends ProseEditor {\n\n  didMount() {\n    // Register editor overlays\n    let scrollPane = this.context.scrollPane\n    let Overlay = this.componentRegistry.get('overlay')\n    let Dropzones = this.componentRegistry.get('dropzones')\n\n    this.overlay = new Overlay(this, {\n      toolGroups: ['annotations', 'text', 'overlay']\n    }).mount(scrollPane.el)\n\n    this.dropzones = new Dropzones(this, {}).mount(scrollPane.el)\n  }\n\n  dispose() {\n    this.overlay.remove()\n    this.dropzones.remove()\n  }\n\n  render($$) {\n    let el = $$('div').addClass('sc-rich-text-area-editor')\n    let configurator = this.getConfigurator()\n\n    el.append(\n      $$(ContainerEditor, {\n        disabled: this.props.disabled,\n        editorSession: this.editorSession,\n        node: this.doc.get('body'),\n        commands: configurator.getSurfaceCommandNames(),\n        textTypes: configurator.getTextTypes()\n      }).ref('body')\n    )\n    return el\n  }\n\n}\n\nexport default RichTextAreaEditor\n","import { HTMLImporter } from 'substance'\n\n/*\n  Usage:\n\n  ```js\n  let importer = cfg.createImporter('html')\n  let doc = importer.importDocument('<p>foo</p><p>bar</p>')\n  ```\n*/\nclass RichTextAreaHTMLImporter extends HTMLImporter {\n  convertDocument(documentEl) {\n    let bodyEl = documentEl.find('body')\n    this.convertContainer(bodyEl.childNodes, 'body')\n  }\n}\n\nexport default RichTextAreaHTMLImporter\n","import { HTMLExporter } from 'substance'\n\nclass RichTextAreaHTMLExporter extends HTMLExporter {\n  convertDocument(doc) {\n    let body = doc.get('body')\n    let elements = this.convertContainer(body)\n    return elements.map((el) => {\n      return el.outerHTML\n    }).join('')\n  }\n}\n\nexport default RichTextAreaHTMLExporter\n","import {\n  Document, BasePackage, ParagraphPackage\n} from 'substance'\n\nimport RichTextAreaHTMLImporter from './RichTextAreaHTMLImporter'\nimport RichTextAreaHTMLExporter from './RichTextAreaHTMLExporter'\n\nexport default {\n  name: 'rich-text-area',\n  configure: function(config) {\n    config.defineSchema({\n      name: 'rich-text-area',\n      DocumentClass: Document,\n      defaultTextType: 'paragraph'\n    })\n\n    let defaultOptions = {\n      disableCollapsedCursor: true,\n      toolGroup: 'overlay'\n    }\n\n    config.import(BasePackage, defaultOptions)\n    config.import(ParagraphPackage, defaultOptions)\n\n    // HTML importers/exporters\n    config.addImporter('html', RichTextAreaHTMLImporter)\n    config.addExporter('html', RichTextAreaHTMLExporter)\n  }\n}\n","import { PropertyAnnotation, Fragmenter } from 'substance'\n\nclass Xref extends PropertyAnnotation {}\n\nXref.define({\n  type: 'xref',\n  content: { type: 'string', optional: true }\n})\n\n// in presence of overlapping annotations will try to render this as one element\nXref.fragmentation = Fragmenter.SHOULD_NOT_SPLIT\n\nexport default Xref\n","export default {\n\n  type: 'xref',\n  tagName: 'span',\n\n  matchElement: function(el) {\n    return el.is('span') && el.attr('data-type') === 'xref'\n  }\n\n}\n","import { AnnotationComponent, AnnotationCommand, AnnotationTool } from 'substance'\nimport Xref from './Xref'\nimport XrefHTMLConverter from './XrefHTMLConverter'\n\nexport default {\n  name: 'xref',\n  configure: function(config, {\n    toolGroup,\n    disableCollapsedCursor\n  }) {\n    config.addNode(Xref)\n    config.addComponent('xref', AnnotationComponent)\n    config.addConverter('html', XrefHTMLConverter)\n\n    config.addCommand('xref', AnnotationCommand, {\n      nodeType: 'xref',\n      disableCollapsedCursor\n    })\n    config.addTool('xref', AnnotationTool, {\n      toolGroup: toolGroup || 'annotations'\n    })\n    config.addIcon('xref', { 'fontawesome': 'fa-comment'})\n    config.addLabel('xref', 'Comment')\n  }\n}\n","import { Tool } from 'substance'\n\n/*\n  Simplified version of SwitchTextTypeTool that looks nicer\n  in overlay-only editing scenarios\n*/\nclass MinimalSwitchTextTypeTool extends Tool {\n\n  render($$) {\n    let Button = this.getComponent('button')\n    let el = $$('div').addClass('sc-minimal-switch-text-type')\n    this.props.textTypes.forEach((textType) => {\n      let button = $$(Button, {\n        label: textType.name,\n        active: this.props.currentTextType.name === textType.name,\n        disabled: this.props.disabled,\n        style: this.props.style\n      }).attr('data-type', textType.name)\n        .on('click', this.handleClick)\n      el.append(button)\n    })\n    return el\n  }\n\n  handleClick(e) {\n    let newTextType = e.currentTarget.dataset.type\n    e.preventDefault()\n    this.context.commandManager.executeCommand(this.getCommandName(), {\n      textType: newTextType\n    })\n  }\n}\n\nexport default MinimalSwitchTextTypeTool\n","import MinimalSwitchTextTypeTool from './MinimalSwitchTextTypeTool'\nimport { SwitchTextTypePackage } from 'substance'\nconst { SwitchTextTypeCommand } = SwitchTextTypePackage\n\nexport default {\n  name: 'minimal-switch-text-type',\n  configure: function(config) {\n    config.addToolGroup('text')\n    config.addCommand('minimal-switch-text-type', SwitchTextTypeCommand, {\n      disableCollapsedCursor: true\n    })\n    config.addTool('minimal-switch-text-type', MinimalSwitchTextTypeTool, {\n      toolGroup: 'text'\n    })\n\n    config.addLabel('paragraph', 'P')\n    config.addLabel('heading1', 'H1')\n    config.addLabel('heading2', 'H2')\n    config.addLabel('heading3', 'H3')\n\n  }\n}\n","import {\n  Component, Configurator, EditorSession, EmphasisPackage, StrongPackage,\n  LinkPackage, ListPackage, TablePackage, HeadingPackage, TextAlignPackage\n} from 'substance'\nimport RichTextAreaEditor from './RichTextAreaEditor'\nimport RichTextAreaPackage from './RichTextAreaPackage'\nimport XrefPackage from '../xref/XrefPackage'\nimport MinimalSwitchTextTypePackage from '../minimal-switch-text-type/MinimalSwitchTextTypePackage'\n\n// Packages configuration\nconst PACKAGES = {\n  'strong': StrongPackage,\n  'emphasis': EmphasisPackage,\n  'link': LinkPackage,\n  'list': ListPackage,\n  'table': TablePackage,\n  'xref': XrefPackage,\n  'heading': HeadingPackage,\n  'text-align': TextAlignPackage,\n}\n\nconst DEFAULT_PACKAGES = ['heading', 'strong', 'emphasis', 'link', 'list', 'table']\n\nclass RichTextArea extends Component {\n  constructor(...args) {\n    super(...args)\n    this.cfg = new Configurator().import(RichTextAreaPackage)\n    let enabledPackages = this.props.config.enabledPackages || DEFAULT_PACKAGES\n    let defaultOptions = {\n      disableCollapsedCursor: true,\n      toolGroup: 'annotations'\n    }\n    enabledPackages.forEach((pkg) => {\n      this.cfg.import(PACKAGES[pkg], defaultOptions)\n    })\n    // NOTE: We enable MinimalSwitchTextTypePackage as the last package\n    // as it overwrites some labels for heading / paragraphs.\n    if (enabledPackages.indexOf('heading') >= 0) {\n      this.cfg.import(MinimalSwitchTextTypePackage)\n    }\n    this._initDoc(this.props)\n  }\n\n  didMount() {\n    this.registerHandlers()\n  }\n\n  didUpdate() {\n    this.registerHandlers()\n  }\n\n  hideOverlays() {\n    this.refs.editor.hideOverlays()\n  }\n\n  registerHandlers() {\n    this.editorSession.onRender('selection', this._onSelectionChanged, this)\n  }\n\n  unregisterHandlers() {\n    this.editorSession.off(this)\n  }\n\n  dispose() {\n    this.unregisterHandlers()\n  }\n\n  /*\n    Blurring this editor means setting the selection to null.\n    This triggers recomputation of the command states and makes overlays\n    disappear\n  */\n  blur() {\n    this.editorSession.setSelection(null)\n  }\n\n  _onSelectionPositioned(hints) {\n    hints.editorId = this.props.editorId\n    this.emit('selection:positioned', hints)\n  }\n\n  getChildContext() {\n    return {\n      editorId: this.props.editorId,\n      scrollPane: this.props.scrollPane\n    }\n  }\n\n  willReceiveProps(props) {\n    this.dispose()\n    this.empty()\n    this._initDoc(props)\n  }\n\n  _initDoc(props) {\n    this.importer = this.cfg.createImporter('html')\n    this.doc = this.importer.importDocument(props.html)\n\n    // Deregister handlers\n    this.editorSession = new EditorSession(this.doc, {\n      id: this.props.editorId,\n      configurator: this.cfg\n    })\n  }\n\n  _onSelectionChanged() {\n    let selectionState = this.editorSession.getSelectionState()\n    let activeAnnotation = selectionState.getAnnotationsForType('xref')[0]\n    this.emit('selection:changed', {\n      activeAnnotation,\n      editorId: this.props.editorId\n    })\n  }\n\n  render($$) {\n    let el = $$('div').addClass('sc-rich-text-area')\n    el.append(\n      $$(RichTextAreaEditor, {\n        editorSession: this.editorSession,\n        editorId: this.props.editorId\n      }).ref('editor')\n    )\n    return el\n  }\n\n  getHTML() {\n    let htmlExporter = this.cfg.createExporter('html')\n    // Given that exportDocument returns an HTML string\n    return htmlExporter.exportDocument(this.doc)\n  }\n}\n\nexport default RichTextArea\n","import { DefaultDOMElement, EventEmitter, BodyScrollPanePackage } from 'substance'\nimport RichTextArea from './rich-text-area/RichTextArea'\n\nconst { BodyScrollPane } = BodyScrollPanePackage\n\nexport default class Forms extends EventEmitter {\n  constructor(...args) {\n    super(...args)\n    this._editables = {}\n    this.bodyScrollPane = BodyScrollPane.mount({}, document.body)\n    this.bodyScrollPane.on('selection:positioned', this._onSelectionPositioned, this)\n  }\n\n  dispose() {\n    this.bodyScrollPane.off(this)\n  }\n\n  addRichTextArea(editorId, el, config) {\n    config = config || {}\n    el = DefaultDOMElement.wrapNativeElement(el)\n    let html = el.innerHTML\n    // We remove the old content, and replace it with an editor\n    el.innerHTML = ''\n    let richTextArea = RichTextArea.mount({\n      scrollPane: this.bodyScrollPane,\n      editorId,\n      html,\n      config\n    }, el)\n    richTextArea.on('selection:positioned', this._onSelectionPositioned, this)\n    richTextArea.on('selection:changed', this._onSelectionChanged, this)\n    this._editables[editorId] = richTextArea\n    return richTextArea\n  }\n\n  _onSelectionPositioned(hints) {\n    this.emit('selection:positioned', hints)\n  }\n\n  _onSelectionChanged(params) {\n    this.emit('selection:changed', params)\n  }\n\n  removeRichTextArea(editorId) {\n    this._editables[editorId].off(this)\n  }\n\n  getHTML(editorId) {\n    return this._editables[editorId].getHTML()\n  }\n\n  setHTML(editorId, html) {\n    let editor = this._editables[editorId]\n    editor.extendProps({\n      html: html\n    })\n  }\n}\n","import Forms from './Forms'\n\nwindow.SubstanceForms = Forms\n"],"names":["let","ContainerEditor","HTMLImporter","HTMLExporter","Document","BasePackage","ParagraphPackage","PropertyAnnotation","Fragmenter","AnnotationComponent","AnnotationCommand","AnnotationTool","this","Tool","const","StrongPackage","EmphasisPackage","LinkPackage","ListPackage","TablePackage","HeadingPackage","TextAlignPackage","super","Configurator","EditorSession","Component","DefaultDOMElement","EventEmitter"],"mappings":"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"}